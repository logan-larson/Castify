# schema.graphql

# ------------------------------------------------------------
# --------------------- Scalar Types -------------------------
# ------------------------------------------------------------

scalar Date

# ------------------------------------------------------------
# --------------------- Object Types -------------------------
# ------------------------------------------------------------

type User {
    id: ID
    username: String
    email: String
    password: String
    token: String

    #firstName: String
    #lastName: String
    #joinDate: Date
    #lastLoginDate: Date
    #profileImage: String
    #bio: String
}

input RegisterInput {
	username: String
	email: String
	password: String
}

input LoginInput {
	email: String
	password: String
}

type AuthPayload {
    token: String!
    user: User!
}

type FollowerRelation {
    follower: User!
    followed: User!
    since: Date!
}

type UserShowRelation {
    user: User!
    show: PodcastShow!
    followedSince: Date!
}

type UserPlaylistRelation {
    user: User!
    playlist: Playlist!
    createdOn: Date!
}

type PodcastShow {
    id: ID!
    title: String!
    episodes: [Episode]
    followers: [UserShowRelation]
    # ... other fields ...
}

type Playlist {
    id: ID!
    title: String!
    episodes: [Episode]
    creator: UserPlaylistRelation
    # ... other fields ...
}

type Episode {
    id: ID!
    title: String!
    # ... other fields ...
}

# ------------------------------------------------------------
# -------------------- Mutation Types ------------------------
# ------------------------------------------------------------

type Mutation {
    registerUser(registerInput: RegisterInput): User
	loginUser(loginInput: LoginInput): User
}

# ------------------------------------------------------------
# ---------------------- Query Types -------------------------
# ------------------------------------------------------------

type Query {
	user(id: ID!): User
    getCurrentUser: User
    hello: String
}
